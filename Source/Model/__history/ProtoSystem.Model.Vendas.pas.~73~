unit ProtoSystem.Model.Vendas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Data.DB, Vcl.Grids,
  Vcl.DBGrids, Vcl.Buttons, Vcl.StdCtrls, Vcl.DBCtrls, Datasnap.DBClient,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Mask, CommCtrl;

type
  TFrm_Vendas = class(TForm)
    PNL_PRINCIPAL: TPanel;
    PNL_PRODUTO: TPanel;
    PNL_BUTTONS: TPanel;
    PNL_PRINCIPAL_MAIN: TPanel;
    Panel1: TPanel;
    Shape1: TShape;
    btnCancelaVenda: TSpeedButton;
    pnlPesquisaProduto: TPanel;
    shpPesquisaProduto: TShape;
    btnPesquisaProduto: TSpeedButton;
    Panel3: TPanel;
    Shape3: TShape;
    BTN_AbrirCaixa: TSpeedButton;
    pnlFinalizarVenda: TPanel;
    shpFinalizarVenda: TShape;
    btn_FinalizarVenda: TSpeedButton;
    Panel5: TPanel;
    Shape5: TShape;
    BTN_CancelarItem: TSpeedButton;
    gridCarrinhoVendas: TDBGrid;
    PNL_OPERACOES: TPanel;
    GB_Total: TGroupBox;
    Sh_Total: TShape;
    GB_QTD: TGroupBox;
    Shape7: TShape;
    GB_SUBTOTAL: TGroupBox;
    Shape8: TShape;
    GB_PRECO: TGroupBox;
    Shape9: TShape;
    GB_PRODUTO: TGroupBox;
    Shape10: TShape;
    PNL_IMAGEM: TPanel;
    DBImage1: TDBImage;
    cdsVendaProdutos: TClientDataSet;
    gridTabelaProduto: TDBGrid;
    Panel2: TPanel;
    Shape2: TShape;
    SpeedButton1: TSpeedButton;
    pnl2PesquisaProduto: TPanel;
    shp2PesquisaProduto: TShape;
    edtPesquisaProduto: TEdit;
    SQL_Produtos: TFDQuery;
    DS_produtos: TDataSource;
    cdsVendaProdutosID: TIntegerField;
    cdsVendaProdutosDescricao: TStringField;
    cdsVendaProdutosValorUnitario: TFloatField;
    cdsVendaProdutosQuantidade: TIntegerField;
    cdsVendaProdutosValorTotal: TFloatField;
    ds_VendaProdutos: TDataSource;
    SQL_ProdutosID: TFDAutoIncField;
    SQL_ProdutosDESCRICAO: TStringField;
    SQL_ProdutosESTOQUE: TIntegerField;
    SQL_ProdutosCUSTO: TFloatField;
    SQL_ProdutosPRECO: TFloatField;
    SQL_ProdutosIMAGEM: TBlobField;
    SQL_ProdutosDATAHORACADASTRO: TDateTimeField;
    SQL_ProdutosDATAHORAALTERACAO: TDateTimeField;
    edtCodigoProduto: TEdit;
    edtPrecoProduto: TEdit;
    edtQuantidadeProduto: TEdit;
    edtSubTotalProduto: TEdit;
    edtTotalVenda: TEdit;
    cdsVendaPedidos: TClientDataSet;
    dsVendaPedidos: TDataSource;
    procedure btnPesquisaProdutoClick(Sender: TObject);
    procedure btn_FinalizarVendaClick(Sender: TObject);
    procedure gridTabelaProdutoCellClick(Column: TColumn);
    procedure FormCreate(Sender: TObject);
    procedure edtPesquisaProdutoChange(Sender: TObject);
    procedure BTN_CancelarItemClick(Sender: TObject);
    procedure btnCancelaVendaClick(Sender: TObject);
  private
    TotalAmount: double;
    procedure InicializaComponentes;
    procedure AtualizaTotais;
    procedure TransfereInformacoes;
    var
      SubTotalFLT: Double;
      QuantidadeProdINT: Integer;
      PrecoProd: Double;
      IdProd: Integer;
      QuantidadeProdSTR: string;

  public
    var
      TotalGeralFLT: Double;
  end;

var
  Frm_Vendas: TFrm_Vendas;

implementation

{$R *.dfm}

uses ProtoSystem.Controller.Dm, ProtoSystem.Model.VendasFechamento;

procedure TFrm_Vendas.btnCancelaVendaClick(Sender: TObject);
begin
if not cdsVendaProdutos.IsEmpty then
with TTaskDialog.Create(Self) do
  try
    Caption := 'Cancelamento';
    Title := 'Deseja realmente cancelar esta venda ?';
    CommonButtons := [tcbYes, tcbNo];
    MainIcon := tdiInformation;
    if Execute then
      if ModalResult = mrYes then
        begin
          while not cdsVendaProdutos.IsEmpty do
            begin
            cdsVendaProdutos.Delete;
            end;
            AtualizaTotais;
        //Limpa registros
        edtCodigoProduto.Text:='';
        edtPrecoProduto.Text:='';
        edtPrecoProduto.Text:='';
        edtQuantidadeProduto.Text:='';
        edtSubTotalProduto.Text:='';
        edtTotalVenda.Text:='';
        ShowMessage('Venda cancelada com sucesso.');
      end
  finally
    Free;
  end;
end;

procedure TFrm_Vendas.btnPesquisaProdutoClick(Sender: TObject);
begin
  // Pesquisa Produto
  gridCarrinhoVendas.Visible:=false;
  gridTabelaProduto.Visible:=true;
  pnl2PesquisaProduto.Visible:=true;
  edtPesquisaProduto.SetFocus;
end;

procedure TFrm_Vendas.BTN_CancelarItemClick(Sender: TObject);
begin
  //Cancela item
  cdsVendaProdutos.Delete;
  AtualizaTotais;
end;

procedure TFrm_Vendas.btn_FinalizarVendaClick(Sender: TObject);
begin
  // Finalizar Venda
  if not cdsVendaProdutos.IsEmpty then
  begin
  Application.CreateForm(TfrmVendasFechamento, frmVendasFechamento);
  frmVendasFechamento.ShowModal;
  end;
end;

procedure TFrm_Vendas.edtPesquisaProdutoChange(Sender: TObject);
begin
  if edtPesquisaProduto.Text <> '' then
  begin
    SQL_Produtos.Filtered := False;
    SQL_Produtos.Filter := 'DESCRICAO LIKE ' +
      QuotedStr('%' + edtPesquisaProduto.Text + '%');
    SQL_Produtos.Filtered := True;
  end
  else
    SQL_Produtos.Filtered := False;
end;

procedure TFrm_Vendas.FormCreate(Sender: TObject);
begin
  InicializaComponentes;
end;

procedure TFrm_Vendas.gridTabelaProdutoCellClick(Column: TColumn);
begin
  TransfereInformacoes;
  AtualizaTotais;
end;

procedure TFrm_Vendas.TransfereInformacoes;
var
  DescricaoProd: string;
  EstoqueProd: Integer;
begin
  //Transferencia da celula de pesquisa selecionada
 var CellProd := gridTabelaProduto.DataSource.DataSet.RecNo;
  //Obtém os dados da linha selecionada no DBGrid
  IdProd := SQL_Produtos.FieldByName('ID').AsInteger;
  DescricaoProd := SQL_Produtos.FieldByName('DESCRICAO').AsString;
  PrecoProd := SQL_Produtos.FieldByName('PRECO').AsFloat;
  EstoqueProd := SQL_Produtos.FieldByName('ESTOQUE').AsInteger;
  //Solicita ao usuário que insira a quantidade desejada
  QuantidadeProdSTR := InputBox('Quantidade', 'Informe a quantidade:', '');
  if QuantidadeProdSTR = '' then
  begin
      ShowMessage('Não é permitido valor zerado! ');
  end
  else
  begin
  TryStrToInt(QuantidadeProdSTR, QuantidadeProdINT);
  //Insere os dados no TClientDataSet
  cdsVendaProdutos.Append;
  cdsVendaProdutos.FieldByName('ID').AsInteger := IdProd;
  cdsVendaProdutos.FieldByName('Descricao').AsString := DescricaoProd;
  cdsVendaProdutos.FieldByName('Valor Unitario').AsFloat := PrecoProd;
  cdsVendaProdutos.FieldByName('Quantidade').AsInteger := QuantidadeProdInt;
  cdsVendaProdutos.FieldByName('Valor Total').AsFloat := QuantidadeProdInt * PrecoProd;
  cdsVendaProdutos.Post;
  end

end;

procedure TFrm_Vendas.AtualizaTotais;
var
  IdProdSTR: string;
  PrecoProdSTR: string;
  SubTotalSTR: string;
  TotalGeralSTR: string;
begin
  //Calcula Total Geral da venda
  TotalGeralFLT := 0.0;
  cdsVendaProdutos.First;
    while not cdsVendaProdutos.Eof do
    begin
      TotalGeralFLT := TotalGeralFLT + cdsVendaProdutos.FieldByName('Valor Total').AsFloat;
      cdsVendaProdutos.Next;
    end;
    //Limpa registros
    edtCodigoProduto.Text:='';
    edtPrecoProduto.Text:='';
    edtPrecoProduto.Text:='';
    edtQuantidadeProduto.Text:='';
    edtSubTotalProduto.Text:='';
    edtTotalVenda.Text:='';
    //Calcula SubTotal
    SubTotalFLT:= QuantidadeProdInt * PrecoProd;
    //Converte dados para string
    IdProdSTR := IntToStr(IdProd);
    PrecoProdSTR:= FloatToStr(PrecoProd);
    SubTotalSTR := FloatToStr(SubTotalFLT);
    TotalGeralSTR:= FloatToStr(TotalGeralFLT);
    //Atualiza o total da compra;
    edtCodigoProduto.Text:= IdProdSTR;
    edtPrecoProduto.Text:= PrecoProdSTR;
    edtQuantidadeProduto.Text:= QuantidadeProdSTR;
    edtSubTotalProduto.Text:= SubTotalSTR;
    edtTotalVenda.Text:= TotalGeralSTR;
    // teste
    gridCarrinhoVendas.Visible:=true;
    gridTabelaProduto.Visible:=false;
    pnl2PesquisaProduto.Visible:=false;
    gridCarrinhoVendas.SetFocus;
    dm.TotalGeralFLT:=TotalGeralFLT;
end;

procedure TFrm_Vendas.InicializaComponentes;
begin
  //inicialização de componentes
  DS_produtos.dataset:=SQL_Produtos;
  DS_produtos.enabled:=true;
  SQL_Produtos.connection:=DM.conexao;
  SQL_Produtos.Active:=true;
  ds_VendaProdutos.dataset:=cdsVendaProdutos;
  ds_VendaProdutos.Enabled:=true;
  gridCarrinhoVendas.Visible:=true;
  gridTabelaProduto.Visible:=false;
  pnl2PesquisaProduto.Visible:=false;
end;

end.
